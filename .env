GO_ENV=development
PORT=8000
LOG_LEVEL=info
POSTGRES_HOST=postgres
POSTGRES_DB=ub
POSTGRES_USER=ub
POSTGRES_PASSWORD=ub



# MAKE DATABASE CONTAINER USING DOCKER
# docker run -itd \
#   --rm \
#   --name ub \
#   --env POSTGRES_PASSWORD=ub \
#   --env POSTGRES_DB=ub \
#   --volume pg-data:/var/lib/postgresql/data \
#   --publish 5433:5433 \
#   postgres:bookworm


#MAKE GO CODE RUNS IN DOCKER

#ub prod is the application image inside docker
#docker run -itd --rm --name go-code-app --publish 8000:8000 --env-file .env ub-prod


#create Network
# docker network create go-network

#stop ub(the database) and start inside a newtork
# docker container stop ub

#Update DATABASE container as follows so that its inside the network
# docker run  -itd\
#   --rm  \
#   --name ub \
#   --env POSTGRES_PASSWORD=ub \
#   --env POSTGRES_DB=ub \
#   --volume pg-data:/var/lib/postgresql/data \
#   --publish 5433:5433 \
#   --network go-network \
#   postgres:bookworm


#run the app instance inside the network
# docker run -itd\
#   --rm \
#   --name go-code-app \
#   --publish 8000:8000 \
#   --env-file .env \
#   --network go-network \
#   ub-prod


#configure web-server

#docker run -itd --rm --name ub-app-webServ -p 81:80 caddy

# docker run \
#    --rm \
#    --name ub-app-webServ \
#    -p 81:80 \
#    -v caddy-config:/config \
#    -v caddy-data:/data \
#    -v $(pwd)/Caddyfile:/etc/caddy/Caddyfile \
#    --network go-network \
#    caddy
